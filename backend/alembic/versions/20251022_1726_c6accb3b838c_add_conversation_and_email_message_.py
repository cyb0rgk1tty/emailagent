"""add_conversation_and_email_message_tables

Revision ID: c6accb3b838c
Revises: 
Create Date: 2025-10-22 17:26:29.958340+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c6accb3b838c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('analytics_snapshots', 'snapshot_date',
               existing_type=sa.DATE(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.alter_column('analytics_snapshots', 'period_type',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('analytics_snapshots', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('analytics_snapshots_snapshot_date_period_type_key', 'analytics_snapshots', type_='unique')
    op.drop_index('idx_snapshots_date', table_name='analytics_snapshots')
    op.drop_index('idx_snapshots_period', table_name='analytics_snapshots')
    op.create_index(op.f('ix_analytics_snapshots_id'), 'analytics_snapshots', ['id'], unique=False)
    op.create_index(op.f('ix_analytics_snapshots_snapshot_date'), 'analytics_snapshots', ['snapshot_date'], unique=False)
    op.alter_column('document_embeddings', 'document_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('document_embeddings', 'document_type',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('document_embeddings', 'section_title',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('document_embeddings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('document_embeddings', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_embeddings_active', table_name='document_embeddings', postgresql_where='(is_active = true)')
    op.drop_index('idx_embeddings_document', table_name='document_embeddings')
    op.drop_index('idx_embeddings_type', table_name='document_embeddings')
    op.create_index(op.f('ix_document_embeddings_document_name'), 'document_embeddings', ['document_name'], unique=False)
    op.create_index(op.f('ix_document_embeddings_document_type'), 'document_embeddings', ['document_type'], unique=False)
    op.create_index(op.f('ix_document_embeddings_id'), 'document_embeddings', ['id'], unique=False)
    op.create_index(op.f('ix_document_embeddings_is_active'), 'document_embeddings', ['is_active'], unique=False)
    op.alter_column('drafts', 'subject_line',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('drafts', 'status',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::text"))
    op.alter_column('drafts', 'response_type',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('drafts', 'flags',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=sa.ARRAY(sa.String()),
               existing_nullable=True)
    op.alter_column('drafts', 'rag_sources',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=sa.ARRAY(sa.String()),
               existing_nullable=True)
    op.alter_column('drafts', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('drafts', 'reviewed_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('drafts', 'approved_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('drafts', 'sent_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('drafts', 'reviewed_by',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('drafts', 'customer_sentiment',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_index('idx_drafts_created', table_name='drafts')
    op.drop_index('idx_drafts_lead', table_name='drafts')
    op.drop_index('idx_drafts_pending', table_name='drafts', postgresql_where="(status = 'pending'::text)")
    op.drop_index('idx_drafts_status', table_name='drafts')
    op.create_index(op.f('ix_drafts_id'), 'drafts', ['id'], unique=False)
    op.create_index(op.f('ix_drafts_lead_id'), 'drafts', ['lead_id'], unique=False)
    op.create_index(op.f('ix_drafts_status'), 'drafts', ['status'], unique=False)
    op.add_column('leads', sa.Column('conversation_id', sa.Integer(), nullable=True))
    op.add_column('leads', sa.Column('parent_lead_id', sa.Integer(), nullable=True))
    op.add_column('leads', sa.Column('is_duplicate', sa.Boolean(), nullable=True))
    op.add_column('leads', sa.Column('duplicate_of_lead_id', sa.Integer(), nullable=True))
    op.add_column('leads', sa.Column('lead_status', sa.String(), nullable=False))
    op.alter_column('leads', 'message_id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('leads', 'sender_email',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('leads', 'sender_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('leads', 'company_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('leads', 'phone',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('leads', 'received_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.alter_column('leads', 'processed_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('leads', 'product_type',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=sa.ARRAY(sa.String()),
               existing_nullable=True)
    op.alter_column('leads', 'specific_ingredients',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=sa.ARRAY(sa.String()),
               existing_nullable=True)
    op.alter_column('leads', 'delivery_format',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=sa.ARRAY(sa.String()),
               existing_nullable=True)
    op.alter_column('leads', 'certifications_requested',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=sa.ARRAY(sa.String()),
               existing_nullable=True)
    op.alter_column('leads', 'estimated_quantity',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('leads', 'timeline_urgency',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('leads', 'budget_indicator',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('leads', 'experience_level',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('leads', 'distribution_channel',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=sa.ARRAY(sa.String()),
               existing_nullable=True)
    op.alter_column('leads', 'response_priority',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('leads', 'specific_questions',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=sa.ARRAY(sa.String()),
               existing_nullable=True)
    op.alter_column('leads', 'geographic_region',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('leads', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('leads', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_leads_email', table_name='leads')
    op.drop_index('idx_leads_priority', table_name='leads')
    op.drop_index('idx_leads_processed', table_name='leads', postgresql_where='(processed_at IS NOT NULL)')
    op.drop_index('idx_leads_product_type', table_name='leads', postgresql_using='gin')
    op.drop_index('idx_leads_quality', table_name='leads')
    op.drop_index('idx_leads_received', table_name='leads')
    op.create_index(op.f('ix_leads_conversation_id'), 'leads', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_leads_id'), 'leads', ['id'], unique=False)
    op.create_index(op.f('ix_leads_is_duplicate'), 'leads', ['is_duplicate'], unique=False)
    op.create_index(op.f('ix_leads_lead_status'), 'leads', ['lead_status'], unique=False)
    op.create_index(op.f('ix_leads_parent_lead_id'), 'leads', ['parent_lead_id'], unique=False)
    op.create_index(op.f('ix_leads_processed_at'), 'leads', ['processed_at'], unique=False)
    op.create_index(op.f('ix_leads_received_at'), 'leads', ['received_at'], unique=False)
    op.create_index(op.f('ix_leads_sender_email'), 'leads', ['sender_email'], unique=False)
    op.create_foreign_key(None, 'leads', 'leads', ['parent_lead_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'leads', 'leads', ['duplicate_of_lead_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'leads', 'conversations', ['conversation_id'], ['id'], ondelete='SET NULL')
    op.alter_column('product_type_trends', 'product_type',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('product_type_trends', 'date',
               existing_type=sa.DATE(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.alter_column('product_type_trends', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_trends_date', table_name='product_type_trends')
    op.drop_index('idx_trends_product', table_name='product_type_trends')
    op.drop_constraint('product_type_trends_product_type_date_key', 'product_type_trends', type_='unique')
    op.create_index(op.f('ix_product_type_trends_date'), 'product_type_trends', ['date'], unique=False)
    op.create_index(op.f('ix_product_type_trends_id'), 'product_type_trends', ['id'], unique=False)
    op.create_index(op.f('ix_product_type_trends_product_type'), 'product_type_trends', ['product_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_product_type_trends_product_type'), table_name='product_type_trends')
    op.drop_index(op.f('ix_product_type_trends_id'), table_name='product_type_trends')
    op.drop_index(op.f('ix_product_type_trends_date'), table_name='product_type_trends')
    op.create_unique_constraint('product_type_trends_product_type_date_key', 'product_type_trends', ['product_type', 'date'])
    op.create_index('idx_trends_product', 'product_type_trends', ['product_type'], unique=False)
    op.create_index('idx_trends_date', 'product_type_trends', [sa.text('date DESC')], unique=False)
    op.alter_column('product_type_trends', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('product_type_trends', 'date',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=sa.DATE(),
               existing_nullable=False)
    op.alter_column('product_type_trends', 'product_type',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_constraint(None, 'leads', type_='foreignkey')
    op.drop_constraint(None, 'leads', type_='foreignkey')
    op.drop_constraint(None, 'leads', type_='foreignkey')
    op.drop_index(op.f('ix_leads_sender_email'), table_name='leads')
    op.drop_index(op.f('ix_leads_received_at'), table_name='leads')
    op.drop_index(op.f('ix_leads_processed_at'), table_name='leads')
    op.drop_index(op.f('ix_leads_parent_lead_id'), table_name='leads')
    op.drop_index(op.f('ix_leads_lead_status'), table_name='leads')
    op.drop_index(op.f('ix_leads_is_duplicate'), table_name='leads')
    op.drop_index(op.f('ix_leads_id'), table_name='leads')
    op.drop_index(op.f('ix_leads_conversation_id'), table_name='leads')
    op.create_index('idx_leads_received', 'leads', [sa.text('received_at DESC')], unique=False)
    op.create_index('idx_leads_quality', 'leads', [sa.text('lead_quality_score DESC')], unique=False)
    op.create_index('idx_leads_product_type', 'leads', ['product_type'], unique=False, postgresql_using='gin')
    op.create_index('idx_leads_processed', 'leads', ['processed_at'], unique=False, postgresql_where='(processed_at IS NOT NULL)')
    op.create_index('idx_leads_priority', 'leads', ['response_priority'], unique=False)
    op.create_index('idx_leads_email', 'leads', ['sender_email'], unique=False)
    op.alter_column('leads', 'updated_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('leads', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('leads', 'geographic_region',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('leads', 'specific_questions',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.alter_column('leads', 'response_priority',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('leads', 'distribution_channel',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.alter_column('leads', 'experience_level',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('leads', 'budget_indicator',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('leads', 'timeline_urgency',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('leads', 'estimated_quantity',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('leads', 'certifications_requested',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.alter_column('leads', 'delivery_format',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.alter_column('leads', 'specific_ingredients',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.alter_column('leads', 'product_type',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.alter_column('leads', 'processed_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('leads', 'received_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('leads', 'phone',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('leads', 'company_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('leads', 'sender_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('leads', 'sender_email',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('leads', 'message_id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('leads', 'lead_status')
    op.drop_column('leads', 'duplicate_of_lead_id')
    op.drop_column('leads', 'is_duplicate')
    op.drop_column('leads', 'parent_lead_id')
    op.drop_column('leads', 'conversation_id')
    op.drop_index(op.f('ix_drafts_status'), table_name='drafts')
    op.drop_index(op.f('ix_drafts_lead_id'), table_name='drafts')
    op.drop_index(op.f('ix_drafts_id'), table_name='drafts')
    op.create_index('idx_drafts_status', 'drafts', ['status'], unique=False)
    op.create_index('idx_drafts_pending', 'drafts', ['status'], unique=False, postgresql_where="(status = 'pending'::text)")
    op.create_index('idx_drafts_lead', 'drafts', ['lead_id'], unique=False)
    op.create_index('idx_drafts_created', 'drafts', [sa.text('created_at DESC')], unique=False)
    op.alter_column('drafts', 'customer_sentiment',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('drafts', 'reviewed_by',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('drafts', 'sent_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('drafts', 'approved_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('drafts', 'reviewed_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('drafts', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('drafts', 'rag_sources',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.alter_column('drafts', 'flags',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.alter_column('drafts', 'response_type',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('drafts', 'status',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::text"))
    op.alter_column('drafts', 'subject_line',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_index(op.f('ix_document_embeddings_is_active'), table_name='document_embeddings')
    op.drop_index(op.f('ix_document_embeddings_id'), table_name='document_embeddings')
    op.drop_index(op.f('ix_document_embeddings_document_type'), table_name='document_embeddings')
    op.drop_index(op.f('ix_document_embeddings_document_name'), table_name='document_embeddings')
    op.create_index('idx_embeddings_type', 'document_embeddings', ['document_type'], unique=False)
    op.create_index('idx_embeddings_document', 'document_embeddings', ['document_name', 'version'], unique=False)
    op.create_index('idx_embeddings_active', 'document_embeddings', ['is_active'], unique=False, postgresql_where='(is_active = true)')
    op.alter_column('document_embeddings', 'updated_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('document_embeddings', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('document_embeddings', 'section_title',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('document_embeddings', 'document_type',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('document_embeddings', 'document_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_index(op.f('ix_analytics_snapshots_snapshot_date'), table_name='analytics_snapshots')
    op.drop_index(op.f('ix_analytics_snapshots_id'), table_name='analytics_snapshots')
    op.create_index('idx_snapshots_period', 'analytics_snapshots', ['period_type'], unique=False)
    op.create_index('idx_snapshots_date', 'analytics_snapshots', [sa.text('snapshot_date DESC')], unique=False)
    op.create_unique_constraint('analytics_snapshots_snapshot_date_period_type_key', 'analytics_snapshots', ['snapshot_date', 'period_type'])
    op.alter_column('analytics_snapshots', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('analytics_snapshots', 'period_type',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('analytics_snapshots', 'snapshot_date',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=sa.DATE(),
               existing_nullable=False)
    # ### end Alembic commands ###
